name: CI Pipeline with OpenTelemetry Tracing
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OTEL_EXPORTER_JAEGER_ENDPOINT: ${{ secrets.JAEGER_ENDPOINT }}
      OTEL_SERVICE_NAME: github-actions-pipeline
      OTEL_RESOURCE_ATTRIBUTES: job.name=build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install OpenTelemetry CLI
      run: |
        curl -L https://github.com/open-telemetry/opentelemetry-collector/releases/download/v0.83.0/otelcol_0.83.0_linux_amd64.tar.gz | tar xz
        sudo mv otelcol /usr/local/bin/

    - name: Install otel-cli
      run: |
        go install github.com/equinix-labs/otel-cli@latest
        echo "${GOPATH}/bin" >> $GITHUB_PATH

    - name: Start OpenTelemetry Collector
      run: |
        cat << EOF > otel-config.yaml
        receivers:
          otlp:
            protocols:
              http:
                endpoint: 0.0.0.0:4318
        exporters:
          jaeger:
            endpoint: ${{ secrets.JAEGER_ENDPOINT }}
            tls:
              insecure: true
        processors:
          batch:
        service:
          pipelines:
            traces:
              receivers: [otlp]
              processors: [batch]
              exporters: [jaeger]
        EOF
        otelcol --config otel-config.yaml &

    - name: Install dependencies
      run: |
        otel-cli exec --service-name github-actions-pipeline --span-name "Install dependencies" \
          go mod tidy

    - name: Build the application
      run: |
        otel-cli exec --service-name github-actions-pipeline --span-name "Build application" \
          go build -o myapp main.go

    - name: Run the application
      run: |
        otel-cli exec --service-name github-actions-pipeline --span-name "Run application" \
          ./myapp

    - name: Cleanup
      if: always()
      run: |
        pkill otelcol